<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan base-package="com.nt" />
	<context:property-placeholder
		location="classpath:com/nt/commons/application.properties" />
	<bean id="dbcpDs" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver.driver}" />
		<property name="url" value="${driver.url}" />
		<property name="username" value="${driver.user}" />
		<property name="password" value="${driver.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="annotatedClasses">
			<list>
				<value>com.nt.entity.UserRegistration</value>
				<value>com.nt.entity.UserCredentials</value>
				<value>com.nt.entity.UserLanguages</value>
				<value>com.nt.common.utils.Country</value>
				<value>com.nt.common.utils.State</value>
			</list>
		</property>
		<property name="dataSource" ref="dbcpDs" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.nt.entity,com.nt.common.utils"></property>
	</bean>
	<!-- <bean id="ht" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->
	<bean class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- Java Mail Configuration -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.gmail.com" />
	<property name="port" value="587" />
	<property name="username" value="gamidi.nagaraju1995@gmail.com" />
	<property name="password" value="nagaraju138" />

	<property name="javaMailProperties">
	   <props>
       	      <prop key="mail.smtp.auth">true</prop>
       	      <prop key="mail.smtp.starttls.enable">true</prop>
       	   </props>
	</property>
</bean>

  <!-- For times when you need more complex processing, passing data to the scheduled job -->
    <bean name="complexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.websystique.spring.quartz.ScheduledJob" />
        <property name="jobDataMap">
            <map>
                <entry key="service" value-ref="regService" />
            </map>
        </property>
        <property name="durability" value="true" />
    </bean>
    
     <!-- Run the job every 10 Days-->
    <bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="complexJobDetail" />
        <property name="cronExpression" value="* * * 10 * *" />
    </bean>
    
     <!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
    <bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="complexJobDetail" />
            </list>
        </property>
 
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>

	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
</beans>
